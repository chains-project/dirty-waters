name: Upload Python Package to PyPi

on:
  workflow_run:
    workflows: ["Run Black Formatter throughout the codebase", "Ruff Linter"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Version bump
        uses: monperrus/pyproject-bump-pypi@1b3e492715aea6d48cf80c15b5222586d4a26e40
        id: bump_version
        with:
          file_to_bump: "./pyproject.toml"
          bump_type: "minor"
      - name: Get new version
        id: get_version
        run: |
          VERSION=$(grep -m1 'version = ' pyproject.toml | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5.1.0
        with:
          commit_message: "Bump version to ${{ steps.get_version.outputs.version }}"
          branch: ${{ github.head_ref }}
      - name: Create and push tag
        run: |
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine==6.0.0
      - name: Build package
        run: python -m build
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
        run: |
          twine upload dist/*
